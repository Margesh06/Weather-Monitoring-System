{"ast":null,"code":"// src/components/Weather.jsx\nimport React,{useEffect,useState}from'react';import{fetchWeatherData}from'../services/apiService';// Adjust the path as needed\nimport'../styles/weather.css';// Import the CSS file\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Weather=()=>{const[weatherData,setWeatherData]=useState([]);// Initialized as an empty array\nconst[loading,setLoading]=useState(true);const[error,setError]=useState(null);const getWeatherData=async()=>{setLoading(true);// Set loading to true when fetching data\ntry{const data=await fetchWeatherData();// Call the service function\nsetWeatherData(data);// Set the fetched data\nsetLoading(false);// Set loading to false after fetching\n}catch(err){setError('Error fetching weather data');setLoading(false);// Set loading to false in case of error\n}};useEffect(()=>{// Fetch weather data immediately on mount\ngetWeatherData();const intervalId=setInterval(getWeatherData,300000);// Clear the interval on component unmount\nreturn()=>clearInterval(intervalId);},[]);if(loading)return/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading...\"});if(error)return/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error});return/*#__PURE__*/_jsx(\"div\",{className:\"weather-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"weather-circles\",children:weatherData.slice(0,6).map(data=>/*#__PURE__*/// Display only the first 5 entries\n_jsxs(\"div\",{className:\"weather-circle\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"weather-title\",children:data.city}),/*#__PURE__*/_jsxs(\"p\",{className:\"weather-detail\",children:[\"Temperature: \",data.temp.toFixed(2),\" \\xB0C\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"weather-detail\",children:[\"Feels Like: \",data.feels_like.toFixed(2),\" \\xB0C\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"weather-detail\",children:[\"Condition: \",data.main]}),/*#__PURE__*/_jsxs(\"p\",{className:\"weather-detail\",children:[\"Timestamp: \",/*#__PURE__*/_jsx(\"br\",{}),\" \",new Date(data.timestamp).toLocaleString()]})]},data._id))})});};export default Weather;","map":{"version":3,"names":["React","useEffect","useState","fetchWeatherData","jsx","_jsx","jsxs","_jsxs","Weather","weatherData","setWeatherData","loading","setLoading","error","setError","getWeatherData","data","err","intervalId","setInterval","clearInterval","className","children","slice","map","city","temp","toFixed","feels_like","main","Date","timestamp","toLocaleString","_id"],"sources":["C:/Users/MARGESH/OneDrive/Desktop/zeotap/Real Time Weather/weather-monitoring-system/frontend/src/components/WeatherSummary.js"],"sourcesContent":["// src/components/Weather.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport { fetchWeatherData } from '../services/apiService'; // Adjust the path as needed\r\nimport '../styles/weather.css'; // Import the CSS file\r\n\r\nconst Weather = () => {\r\n    const [weatherData, setWeatherData] = useState([]); // Initialized as an empty array\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const getWeatherData = async () => {\r\n        setLoading(true); // Set loading to true when fetching data\r\n        try {\r\n            const data = await fetchWeatherData(); // Call the service function\r\n            setWeatherData(data); // Set the fetched data\r\n            setLoading(false); // Set loading to false after fetching\r\n        } catch (err) {\r\n            setError('Error fetching weather data');\r\n            setLoading(false); // Set loading to false in case of error\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Fetch weather data immediately on mount\r\n        getWeatherData();\r\n\r\n        const intervalId = setInterval(getWeatherData, 300000);\r\n\r\n        // Clear the interval on component unmount\r\n        return () => clearInterval(intervalId);\r\n    }, []);\r\n\r\n    if (loading) return <div className=\"loading\">Loading...</div>;\r\n    if (error) return <div className=\"error\">{error}</div>;\r\n\r\n    return (\r\n        <div className=\"weather-container\">\r\n            <div className=\"weather-circles\">\r\n                {weatherData.slice(0, 6).map((data) => ( // Display only the first 5 entries\r\n                    <div key={data._id} className=\"weather-circle\">\r\n                        <h2 className=\"weather-title\">{data.city}</h2>\r\n                        <p className=\"weather-detail\">Temperature: {data.temp.toFixed(2)} °C</p>\r\n                        <p className=\"weather-detail\">Feels Like: {data.feels_like.toFixed(2)} °C</p>\r\n                        <p className=\"weather-detail\">Condition: {data.main}</p>\r\n                        <p className=\"weather-detail\">Timestamp: <br/> {new Date(data.timestamp).toLocaleString()}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Weather;\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,gBAAgB,KAAQ,wBAAwB,CAAE;AAC3D,MAAO,uBAAuB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhC,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CAClB,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAAE;AACpD,KAAM,CAACS,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAExC,KAAM,CAAAa,cAAc,CAAG,KAAAA,CAAA,GAAY,CAC/BH,UAAU,CAAC,IAAI,CAAC,CAAE;AAClB,GAAI,CACA,KAAM,CAAAI,IAAI,CAAG,KAAM,CAAAb,gBAAgB,CAAC,CAAC,CAAE;AACvCO,cAAc,CAACM,IAAI,CAAC,CAAE;AACtBJ,UAAU,CAAC,KAAK,CAAC,CAAE;AACvB,CAAE,MAAOK,GAAG,CAAE,CACVH,QAAQ,CAAC,6BAA6B,CAAC,CACvCF,UAAU,CAAC,KAAK,CAAC,CAAE;AACvB,CACJ,CAAC,CAEDX,SAAS,CAAC,IAAM,CACZ;AACAc,cAAc,CAAC,CAAC,CAEhB,KAAM,CAAAG,UAAU,CAAGC,WAAW,CAACJ,cAAc,CAAE,MAAM,CAAC,CAEtD;AACA,MAAO,IAAMK,aAAa,CAACF,UAAU,CAAC,CAC1C,CAAC,CAAE,EAAE,CAAC,CAEN,GAAIP,OAAO,CAAE,mBAAON,IAAA,QAAKgB,SAAS,CAAC,SAAS,CAAAC,QAAA,CAAC,YAAU,CAAK,CAAC,CAC7D,GAAIT,KAAK,CAAE,mBAAOR,IAAA,QAAKgB,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAET,KAAK,CAAM,CAAC,CAEtD,mBACIR,IAAA,QAAKgB,SAAS,CAAC,mBAAmB,CAAAC,QAAA,cAC9BjB,IAAA,QAAKgB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAC3Bb,WAAW,CAACc,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAACC,GAAG,CAAER,IAAI,eAAO;AACrCT,KAAA,QAAoBc,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC1CjB,IAAA,OAAIgB,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAEN,IAAI,CAACS,IAAI,CAAK,CAAC,cAC9ClB,KAAA,MAAGc,SAAS,CAAC,gBAAgB,CAAAC,QAAA,EAAC,eAAa,CAACN,IAAI,CAACU,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAG,EAAG,CAAC,cACxEpB,KAAA,MAAGc,SAAS,CAAC,gBAAgB,CAAAC,QAAA,EAAC,cAAY,CAACN,IAAI,CAACY,UAAU,CAACD,OAAO,CAAC,CAAC,CAAC,CAAC,QAAG,EAAG,CAAC,cAC7EpB,KAAA,MAAGc,SAAS,CAAC,gBAAgB,CAAAC,QAAA,EAAC,aAAW,CAACN,IAAI,CAACa,IAAI,EAAI,CAAC,cACxDtB,KAAA,MAAGc,SAAS,CAAC,gBAAgB,CAAAC,QAAA,EAAC,aAAW,cAAAjB,IAAA,QAAI,CAAC,IAAC,CAAC,GAAI,CAAAyB,IAAI,CAACd,IAAI,CAACe,SAAS,CAAC,CAACC,cAAc,CAAC,CAAC,EAAI,CAAC,GALxFhB,IAAI,CAACiB,GAMV,CACR,CAAC,CACD,CAAC,CACL,CAAC,CAEd,CAAC,CAED,cAAe,CAAAzB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}