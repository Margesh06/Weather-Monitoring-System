{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MARGESH\\\\OneDrive\\\\Desktop\\\\zeotap\\\\Real Time Weather\\\\weather-monitoring-system\\\\frontend\\\\src\\\\components\\\\DailySummary.jsx\",\n  _s = $RefreshSig$();\n// src/components/DailySummaryForm.jsx\nimport React, { useState } from 'react';\nimport { fetchDailySummaries } from '../services/apiService'; // Import the function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DailySummaryForm = () => {\n  _s();\n  const [date, setDate] = useState('');\n  const [summaries, setSummaries] = useState([]); // Change to array to store multiple summaries\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setSummaries([]); // Reset summaries on form submission\n\n    try {\n      const data = await fetchDailySummaries(date); // Use the fetch function\n      setSummaries(data); // Set the summaries array\n    } catch (err) {\n      setError('Failed to calculate daily summary. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"daily-summary-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Calculate Daily Weather Summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: date,\n        onChange: e => setDate(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Calculate Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), summaries.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-results\",\n      children: summaries.map(summary => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-result\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Summary for \", summary.city, \" on \", new Date(summary.date).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Average Temperature:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 32\n          }, this), \" \", summary.avg_temp.toFixed(2), \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Maximum Temperature:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 32\n          }, this), \" \", summary.max_temp, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Minimum Temperature:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 32\n          }, this), \" \", summary.min_temp, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Dominant Condition:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 32\n          }, this), \" \", summary.dominant_condition]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this)]\n      }, summary.city, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(DailySummaryForm, \"Y8X7wNYoY/ocPHxLtsB6jOlk7cM=\");\n_c = DailySummaryForm;\nexport default DailySummaryForm;\nvar _c;\n$RefreshReg$(_c, \"DailySummaryForm\");","map":{"version":3,"names":["React","useState","fetchDailySummaries","jsxDEV","_jsxDEV","DailySummaryForm","_s","date","setDate","summaries","setSummaries","error","setError","handleSubmit","e","preventDefault","data","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","length","map","summary","city","Date","toLocaleDateString","avg_temp","toFixed","max_temp","min_temp","dominant_condition","_c","$RefreshReg$"],"sources":["C:/Users/MARGESH/OneDrive/Desktop/zeotap/Real Time Weather/weather-monitoring-system/frontend/src/components/DailySummary.jsx"],"sourcesContent":["// src/components/DailySummaryForm.jsx\r\nimport React, { useState } from 'react';\r\nimport { fetchDailySummaries } from '../services/apiService'; // Import the function\r\n\r\nconst DailySummaryForm = () => {\r\n    const [date, setDate] = useState('');\r\n    const [summaries, setSummaries] = useState([]); // Change to array to store multiple summaries\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n        setSummaries([]); // Reset summaries on form submission\r\n\r\n        try {\r\n            const data = await fetchDailySummaries(date); // Use the fetch function\r\n            setSummaries(data); // Set the summaries array\r\n        } catch (err) {\r\n            setError('Failed to calculate daily summary. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"daily-summary-form\">\r\n            <h2>Calculate Daily Weather Summary</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"date\"\r\n                    value={date}\r\n                    onChange={(e) => setDate(e.target.value)}\r\n                    required\r\n                />\r\n                <button type=\"submit\">Calculate Summary</button>\r\n            </form>\r\n\r\n            {summaries.length > 0 && (\r\n                <div className=\"summary-results\">\r\n                    {summaries.map((summary) => (\r\n                        <div key={summary.city} className=\"summary-result\">\r\n                            <h3>Summary for {summary.city} on {new Date(summary.date).toLocaleDateString()}</h3>\r\n                            <p><strong>Average Temperature:</strong> {summary.avg_temp.toFixed(2)}°C</p>\r\n                            <p><strong>Maximum Temperature:</strong> {summary.max_temp}°C</p>\r\n                            <p><strong>Minimum Temperature:</strong> {summary.min_temp}°C</p>\r\n                            <p><strong>Dominant Condition:</strong> {summary.dominant_condition}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n            {error && <p className=\"error\">{error}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DailySummaryForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}