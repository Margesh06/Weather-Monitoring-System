{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MARGESH\\\\OneDrive\\\\Desktop\\\\zeotap\\\\Real Time Weather\\\\weather-monitoring-system\\\\frontend\\\\src\\\\components\\\\Alerts.js\",\n  _s = $RefreshSig$();\n// src/components/Alerts.jsx\nimport React, { useEffect, useState } from 'react';\nimport { fetchAlerts } from '../services/apiService';\nimport '../styles/alert.css'; // Import the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alerts = () => {\n  _s();\n  const [alerts, setAlerts] = useState([]);\n  const [loading, setLoading] = useState(true); // State for loading indicator\n  const [currentAlertIndex, setCurrentAlertIndex] = useState(0); // Current index of the alert being displayed\n\n  const getAlerts = async () => {\n    setLoading(true); // Set loading to true before fetching\n    try {\n      const data = await fetchAlerts(); // Fetch alerts from the API\n      setAlerts(data); // Update state with fetched alerts\n    } catch (error) {\n      console.error('Failed to fetch alerts:', error); // Log error if fetching fails\n    }\n    setLoading(false); // Set loading to false after fetching\n  };\n  useEffect(() => {\n    // Fetch alerts immediately on mount\n    getAlerts();\n    const intervalId = setInterval(getAlerts, 300000);\n\n    // Clear the interval on component unmount\n    return () => clearInterval(intervalId);\n  }, []);\n  useEffect(() => {\n    // Set an interval to change alerts every 10 seconds\n    const alertInterval = setInterval(() => {\n      setCurrentAlertIndex(prevIndex => (prevIndex + 1) % alerts.length); // Loop through alerts\n    }, 10000); // Change alert every 10 seconds (adjust this for speed)\n\n    return () => clearInterval(alertInterval); // Clear interval on unmount\n  }, [alerts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alerts-container\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this) // Display loading message while fetching\n    : alerts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"alert-type\",\n          children: alerts[currentAlertIndex].alert_type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"alert-timestamp\",\n          children: new Date(alerts[currentAlertIndex].timestamp).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"alert-message\",\n          children: alerts[currentAlertIndex].message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"alert-city\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"City:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 51\n          }, this), \" \", alerts[currentAlertIndex].city]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, alerts[currentAlertIndex]._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-alerts\",\n      children: \"No alerts at this time.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Alerts, \"12Y8uQ6fBEbKg2QflGX86eLt8pU=\");\n_c = Alerts;\nexport default Alerts;\nvar _c;\n$RefreshReg$(_c, \"Alerts\");","map":{"version":3,"names":["React","useEffect","useState","fetchAlerts","jsxDEV","_jsxDEV","Alerts","_s","alerts","setAlerts","loading","setLoading","currentAlertIndex","setCurrentAlertIndex","getAlerts","data","error","console","intervalId","setInterval","clearInterval","alertInterval","prevIndex","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","alert_type","Date","timestamp","toLocaleString","message","city","_id","_c","$RefreshReg$"],"sources":["C:/Users/MARGESH/OneDrive/Desktop/zeotap/Real Time Weather/weather-monitoring-system/frontend/src/components/Alerts.js"],"sourcesContent":["// src/components/Alerts.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport { fetchAlerts } from '../services/apiService';\r\nimport '../styles/alert.css'; // Import the CSS file for styling\r\n\r\nconst Alerts = () => {\r\n    const [alerts, setAlerts] = useState([]);\r\n    const [loading, setLoading] = useState(true); // State for loading indicator\r\n    const [currentAlertIndex, setCurrentAlertIndex] = useState(0); // Current index of the alert being displayed\r\n\r\n    const getAlerts = async () => {\r\n        setLoading(true); // Set loading to true before fetching\r\n        try {\r\n            const data = await fetchAlerts(); // Fetch alerts from the API\r\n            setAlerts(data); // Update state with fetched alerts\r\n        } catch (error) {\r\n            console.error('Failed to fetch alerts:', error); // Log error if fetching fails\r\n        }\r\n        setLoading(false); // Set loading to false after fetching\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Fetch alerts immediately on mount\r\n        getAlerts();\r\n\r\n        const intervalId = setInterval(getAlerts, 300000);\r\n\r\n        // Clear the interval on component unmount\r\n        return () => clearInterval(intervalId);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Set an interval to change alerts every 10 seconds\r\n        const alertInterval = setInterval(() => {\r\n            setCurrentAlertIndex((prevIndex) => (prevIndex + 1) % alerts.length); // Loop through alerts\r\n        }, 10000); // Change alert every 10 seconds (adjust this for speed)\r\n\r\n        return () => clearInterval(alertInterval); // Clear interval on unmount\r\n    }, [alerts]);\r\n\r\n    return (\r\n        <div className=\"alerts-container\">\r\n            {loading ? (\r\n                <div className=\"loading\">Loading...</div> // Display loading message while fetching\r\n            ) : alerts.length > 0 ? (\r\n                <div className=\"alert-card\" key={alerts[currentAlertIndex]._id}>\r\n                    <div className=\"alert-header\">\r\n                        <strong className=\"alert-type\">{alerts[currentAlertIndex].alert_type}</strong>\r\n                        <span className=\"alert-timestamp\">{new Date(alerts[currentAlertIndex].timestamp).toLocaleString()}</span>\r\n                    </div>\r\n                    <div className=\"alert-body\">\r\n                        <p className=\"alert-message\">{alerts[currentAlertIndex].message}</p>\r\n                        <p className=\"alert-city\"><strong>City:</strong> {alerts[currentAlertIndex].city}</p>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <p className=\"no-alerts\">No alerts at this time.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Alerts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}