{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MARGESH\\\\OneDrive\\\\Desktop\\\\zeotap\\\\Real Time Weather\\\\weather-monitoring-system\\\\frontend\\\\src\\\\components\\\\WeatherSummary.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchWeatherData } from '../services/apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherSummary = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const response = await fetchWeatherData();\n        setWeatherData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching weather data:\", error);\n        setError(\"Failed to load data\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadData();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weather Summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: weatherData.map((data, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [data.city, \": \", data.temp, \"\\xB0C (\", data.main, \")\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(WeatherSummary, \"gMh8CXeyt+Z1Z5re5bOIyGwxIjA=\");\n_c = WeatherSummary;\nexport default WeatherSummary;\nvar _c;\n$RefreshReg$(_c, \"WeatherSummary\");","map":{"version":3,"names":["React","useEffect","useState","fetchWeatherData","jsxDEV","_jsxDEV","WeatherSummary","_s","weatherData","setWeatherData","loading","setLoading","error","setError","loadData","response","data","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","city","temp","main","_c","$RefreshReg$"],"sources":["C:/Users/MARGESH/OneDrive/Desktop/zeotap/Real Time Weather/weather-monitoring-system/frontend/src/components/WeatherSummary.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchWeatherData } from '../services/apiService';\r\n\r\nconst WeatherSummary = () => {\r\n    const [weatherData, setWeatherData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const loadData = async () => {\r\n            try {\r\n                const response = await fetchWeatherData();\r\n                setWeatherData(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching weather data:\", error);\r\n                setError(\"Failed to load data\");\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        loadData();\r\n    }, []);\r\n\r\n    if (loading) return <p>Loading data...</p>;\r\n    if (error) return <p>{error}</p>;\r\n\r\n    return (\r\n        <div>\r\n            <h2>Weather Summary</h2>\r\n            <ul>\r\n                {weatherData.map((data, index) => (\r\n                    <li key={index}>\r\n                        {data.city}: {data.temp}Â°C ({data.main})\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WeatherSummary;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,gBAAgB,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,MAAMa,QAAQ,GAAG,MAAAA,CAAA,KAAY;MACzB,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMZ,gBAAgB,CAAC,CAAC;QACzCM,cAAc,CAACM,QAAQ,CAACC,IAAI,CAAC;MACjC,CAAC,CAAC,OAAOJ,KAAK,EAAE;QACZK,OAAO,CAACL,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpDC,QAAQ,CAAC,qBAAqB,CAAC;MACnC,CAAC,SAAS;QACNF,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDG,QAAQ,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE,oBAAOL,OAAA;IAAAa,QAAA,EAAG;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAC1C,IAAIV,KAAK,EAAE,oBAAOP,OAAA;IAAAa,QAAA,EAAIN;EAAK;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAEhC,oBACIjB,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBjB,OAAA;MAAAa,QAAA,EACKV,WAAW,CAACe,GAAG,CAAC,CAACP,IAAI,EAAEQ,KAAK,kBACzBnB,OAAA;QAAAa,QAAA,GACKF,IAAI,CAACS,IAAI,EAAC,IAAE,EAACT,IAAI,CAACU,IAAI,EAAC,SAAI,EAACV,IAAI,CAACW,IAAI,EAAC,GAC3C;MAAA,GAFSH,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACf,EAAA,CApCID,cAAc;AAAAsB,EAAA,GAAdtB,cAAc;AAsCpB,eAAeA,cAAc;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}