{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MARGESH\\\\OneDrive\\\\Desktop\\\\zeotap\\\\Real Time Weather\\\\weather-monitoring-system\\\\frontend\\\\src\\\\components\\\\WeatherSummary.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherDisplay = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState([]);\n  useEffect(() => {\n    const fetchWeather = async () => {\n      try {\n        const response = await axios.get('/weather'); // Make a GET request to the /weather route\n        setWeatherData(response.data); // Set the fetched data to state\n      } catch (error) {\n        console.error('Error fetching weather data:', error);\n      }\n    };\n    fetchWeather(); // Fetch the weather data when the component mounts\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weather Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), weatherData.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: weatherData.map((data, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"City: \", data.city]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temperature: \", data.temp.toFixed(2), \" \\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Feels Like: \", data.feels_like.toFixed(2), \" \\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Condition: \", data.main]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Timestamp: \", new Date(data.timestamp).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No weather data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(WeatherDisplay, \"/WBsAESNl5X9UOGQ8x5/AmmeTCo=\");\n_c = WeatherDisplay;\nexport default WeatherDisplay;\nvar _c;\n$RefreshReg$(_c, \"WeatherDisplay\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","WeatherDisplay","_s","weatherData","setWeatherData","fetchWeather","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","city","temp","toFixed","feels_like","main","Date","timestamp","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/MARGESH/OneDrive/Desktop/zeotap/Real Time Weather/weather-monitoring-system/frontend/src/components/WeatherSummary.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst WeatherDisplay = () => {\r\n    const [weatherData, setWeatherData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchWeather = async () => {\r\n            try {\r\n                const response = await axios.get('/weather'); // Make a GET request to the /weather route\r\n                setWeatherData(response.data); // Set the fetched data to state\r\n            } catch (error) {\r\n                console.error('Error fetching weather data:', error);\r\n            }\r\n        };\r\n\r\n        fetchWeather(); // Fetch the weather data when the component mounts\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Weather Data</h2>\r\n            {weatherData.length > 0 ? (\r\n                <ul>\r\n                    {weatherData.map((data, index) => (\r\n                        <li key={index}>\r\n                            <p>City: {data.city}</p>\r\n                            <p>Temperature: {data.temp.toFixed(2)} °C</p>\r\n                            <p>Feels Like: {data.feels_like.toFixed(2)} °C</p>\r\n                            <p>Condition: {data.main}</p>\r\n                            <p>Timestamp: {new Date(data.timestamp).toLocaleString()}</p>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            ) : (\r\n                <p>No weather data available.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WeatherDisplay;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAM;IACZ,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;QAC9CH,cAAc,CAACE,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACxD;IACJ,CAAC;IAEDJ,YAAY,CAAC,CAAC,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAAW,QAAA,gBACIX,OAAA;MAAAW,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBZ,WAAW,CAACa,MAAM,GAAG,CAAC,gBACnBhB,OAAA;MAAAW,QAAA,EACKR,WAAW,CAACc,GAAG,CAAC,CAACT,IAAI,EAAEU,KAAK,kBACzBlB,OAAA;QAAAW,QAAA,gBACIX,OAAA;UAAAW,QAAA,GAAG,QAAM,EAACH,IAAI,CAACW,IAAI;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxBf,OAAA;UAAAW,QAAA,GAAG,eAAa,EAACH,IAAI,CAACY,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,EAAC,QAAG;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC7Cf,OAAA;UAAAW,QAAA,GAAG,cAAY,EAACH,IAAI,CAACc,UAAU,CAACD,OAAO,CAAC,CAAC,CAAC,EAAC,QAAG;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAClDf,OAAA;UAAAW,QAAA,GAAG,aAAW,EAACH,IAAI,CAACe,IAAI;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7Bf,OAAA;UAAAW,QAAA,GAAG,aAAW,EAAC,IAAIa,IAAI,CAAChB,IAAI,CAACiB,SAAS,CAAC,CAACC,cAAc,CAAC,CAAC;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GALxDG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,gBAELf,OAAA;MAAAW,QAAA,EAAG;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACnC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACb,EAAA,CApCID,cAAc;AAAA0B,EAAA,GAAd1B,cAAc;AAsCpB,eAAeA,cAAc;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}