{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MARGESH\\\\OneDrive\\\\Desktop\\\\zeotap\\\\Real Time Weather\\\\weather-monitoring-system\\\\frontend\\\\src\\\\components\\\\Alerts.js\",\n  _s = $RefreshSig$();\n// src/components/Alerts.jsx\nimport React, { useEffect, useState } from 'react';\nimport { fetchAlerts } from '../services/apiService';\nimport '../styles/alert.css'; // Import the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alerts = () => {\n  _s();\n  const [alerts, setAlerts] = useState([]);\n  const [loading, setLoading] = useState(true); // State for loading indicator\n\n  const getAlerts = async () => {\n    setLoading(true); // Set loading to true before fetching\n    try {\n      const data = await fetchAlerts(); // Fetch alerts from the API\n      setAlerts(data); // Update state with fetched alerts\n    } catch (error) {\n      console.error('Failed to fetch alerts:', error); // Log error if fetching fails\n    }\n    setLoading(false); // Set loading to false after fetching\n  };\n  useEffect(() => {\n    // Fetch alerts immediately on mount\n    getAlerts();\n\n    // Set an interval to fetch alerts every 30 seconds (30000 milliseconds)\n    const intervalId = setInterval(getAlerts, 30000);\n\n    // Clear the interval on component unmount\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alerts-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"alerts-title\",\n      children: \"Weather Alerts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this) // Display loading message while fetching\n    : alerts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alerts-list\",\n      children: alerts.map(alert => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            className: \"alert-type\",\n            children: alert.alert_type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"alert-timestamp\",\n            children: new Date(alert.timestamp).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"alert-message\",\n            children: alert.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"alert-city\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"City:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 59\n            }, this), \" \", alert.city]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this)]\n      }, alert._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-alerts\",\n      children: \"No alerts at this time.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(Alerts, \"yTkYAPIwjY2VhUnMC6nLJnQfpVk=\");\n_c = Alerts;\nexport default Alerts;\nvar _c;\n$RefreshReg$(_c, \"Alerts\");","map":{"version":3,"names":["React","useEffect","useState","fetchAlerts","jsxDEV","_jsxDEV","Alerts","_s","alerts","setAlerts","loading","setLoading","getAlerts","data","error","console","intervalId","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","alert","alert_type","Date","timestamp","toLocaleString","message","city","_id","_c","$RefreshReg$"],"sources":["C:/Users/MARGESH/OneDrive/Desktop/zeotap/Real Time Weather/weather-monitoring-system/frontend/src/components/Alerts.js"],"sourcesContent":["\r\n// src/components/Alerts.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport { fetchAlerts } from '../services/apiService';\r\nimport '../styles/alert.css'; // Import the CSS file for styling\r\n\r\nconst Alerts = () => {\r\n    const [alerts, setAlerts] = useState([]);\r\n    const [loading, setLoading] = useState(true); // State for loading indicator\r\n\r\n    const getAlerts = async () => {\r\n        setLoading(true); // Set loading to true before fetching\r\n        try {\r\n            const data = await fetchAlerts(); // Fetch alerts from the API\r\n            setAlerts(data); // Update state with fetched alerts\r\n        } catch (error) {\r\n            console.error('Failed to fetch alerts:', error); // Log error if fetching fails\r\n        }\r\n        setLoading(false); // Set loading to false after fetching\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Fetch alerts immediately on mount\r\n        getAlerts();\r\n\r\n        // Set an interval to fetch alerts every 30 seconds (30000 milliseconds)\r\n        const intervalId = setInterval(getAlerts, 30000);\r\n\r\n        // Clear the interval on component unmount\r\n        return () => clearInterval(intervalId);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"alerts-container\">\r\n            <h2 className=\"alerts-title\">Weather Alerts</h2>\r\n            {loading ? (\r\n                <div className=\"loading\">Loading...</div> // Display loading message while fetching\r\n            ) : alerts.length > 0 ? (\r\n                <div className=\"alerts-list\">\r\n                    {alerts.map((alert) => (\r\n                        <div className=\"alert-card\" key={alert._id}>\r\n                            <div className=\"alert-header\">\r\n                                <strong className=\"alert-type\">{alert.alert_type}</strong>\r\n                                <span className=\"alert-timestamp\">{new Date(alert.timestamp).toLocaleString()}</span>\r\n                            </div>\r\n                            <div className=\"alert-body\">\r\n                                <p className=\"alert-message\">{alert.message}</p>\r\n                                <p className=\"alert-city\"><strong>City:</strong> {alert.city}</p>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            ) : (\r\n                <p className=\"no-alerts\">No alerts at this time.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Alerts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}