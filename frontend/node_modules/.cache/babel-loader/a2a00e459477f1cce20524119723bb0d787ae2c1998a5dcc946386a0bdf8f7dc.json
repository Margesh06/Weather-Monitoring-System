{"ast":null,"code":"// backend/controllers/alertController.js\nconst Alert = require('../models/Alert');\nconst WeatherData = require('../models/WeatherData');\n\n// Function to create alerts based on weather conditions\nconst checkAlertThreshold = async () => {\n  const thresholdTemp = 20; // Set your temperature threshold\n  const recentData = await WeatherData.find().sort({\n    timestamp: -1\n  }).limit(2); // Get the latest two records\n\n  console.log(\"Recent Weather Data:\", recentData);\n  if (recentData.length >= 2 && recentData[0].temp > thresholdTemp && recentData[1].temp > thresholdTemp) {\n    const alert = new Alert({\n      alert_type: 'Temperature',\n      message: `Temperature exceeded ${thresholdTemp}°C for two consecutive updates.`,\n      timestamp: new Date()\n    });\n    await alert.save(); // Save the alert to the database\n    console.log(\"Alert triggered: \", alert.message);\n  }\n};\n\n// Function to get all alerts\nconst getAlerts = async (req, res) => {\n  try {\n    const alerts = await Alert.find().sort({\n      timestamp: -1\n    });\n    res.status(200).json(alerts); // Return alerts as a JSON response\n  } catch (error) {\n    console.error('Error fetching alerts:', error);\n    res.status(500).json({\n      message: 'Failed to fetch alerts'\n    });\n  }\n};\nmodule.exports = {\n  getAlerts,\n  checkAlertThreshold\n};","map":{"version":3,"names":["Alert","require","WeatherData","checkAlertThreshold","thresholdTemp","recentData","find","sort","timestamp","limit","console","log","length","temp","alert","alert_type","message","Date","save","getAlerts","req","res","alerts","status","json","error","module","exports"],"sources":["C:/Users/MARGESH/OneDrive/Desktop/zeotap/Real Time Weather/weather-monitoring-system/frontend/src/components/Alerts.js"],"sourcesContent":["// backend/controllers/alertController.js\r\nconst Alert = require('../models/Alert');\r\nconst WeatherData = require('../models/WeatherData');\r\n\r\n// Function to create alerts based on weather conditions\r\nconst checkAlertThreshold = async () => {\r\n    const thresholdTemp = 20; // Set your temperature threshold\r\n    const recentData = await WeatherData.find().sort({ timestamp: -1 }).limit(2); // Get the latest two records\r\n\r\n    console.log(\"Recent Weather Data:\", recentData);\r\n\r\n    if (recentData.length >= 2 && recentData[0].temp > thresholdTemp && recentData[1].temp > thresholdTemp) {\r\n        const alert = new Alert({\r\n            alert_type: 'Temperature',\r\n            message: `Temperature exceeded ${thresholdTemp}°C for two consecutive updates.`,\r\n            timestamp: new Date()\r\n        });\r\n\r\n        await alert.save(); // Save the alert to the database\r\n        console.log(\"Alert triggered: \", alert.message);\r\n    }\r\n};\r\n\r\n// Function to get all alerts\r\nconst getAlerts = async (req, res) => {\r\n    try {\r\n        const alerts = await Alert.find().sort({ timestamp: -1 });\r\n        res.status(200).json(alerts); // Return alerts as a JSON response\r\n    } catch (error) {\r\n        console.error('Error fetching alerts:', error);\r\n        res.status(500).json({ message: 'Failed to fetch alerts' });\r\n    }\r\n};\r\n\r\nmodule.exports = { getAlerts, checkAlertThreshold };\r\n"],"mappings":"AAAA;AACA,MAAMA,KAAK,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AACxC,MAAMC,WAAW,GAAGD,OAAO,CAAC,uBAAuB,CAAC;;AAEpD;AACA,MAAME,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EACpC,MAAMC,aAAa,GAAG,EAAE,CAAC,CAAC;EAC1B,MAAMC,UAAU,GAAG,MAAMH,WAAW,CAACI,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC;IAAEC,SAAS,EAAE,CAAC;EAAE,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE9EC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEN,UAAU,CAAC;EAE/C,IAAIA,UAAU,CAACO,MAAM,IAAI,CAAC,IAAIP,UAAU,CAAC,CAAC,CAAC,CAACQ,IAAI,GAAGT,aAAa,IAAIC,UAAU,CAAC,CAAC,CAAC,CAACQ,IAAI,GAAGT,aAAa,EAAE;IACpG,MAAMU,KAAK,GAAG,IAAId,KAAK,CAAC;MACpBe,UAAU,EAAE,aAAa;MACzBC,OAAO,EAAE,wBAAwBZ,aAAa,iCAAiC;MAC/EI,SAAS,EAAE,IAAIS,IAAI,CAAC;IACxB,CAAC,CAAC;IAEF,MAAMH,KAAK,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC;IACpBR,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEG,KAAK,CAACE,OAAO,CAAC;EACnD;AACJ,CAAC;;AAED;AACA,MAAMG,SAAS,GAAG,MAAAA,CAAOC,GAAG,EAAEC,GAAG,KAAK;EAClC,IAAI;IACA,MAAMC,MAAM,GAAG,MAAMtB,KAAK,CAACM,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC;MAAEC,SAAS,EAAE,CAAC;IAAE,CAAC,CAAC;IACzDa,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACF,MAAM,CAAC,CAAC,CAAC;EAClC,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZf,OAAO,CAACe,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9CJ,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAER,OAAO,EAAE;IAAyB,CAAC,CAAC;EAC/D;AACJ,CAAC;AAEDU,MAAM,CAACC,OAAO,GAAG;EAAER,SAAS;EAAEhB;AAAoB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}